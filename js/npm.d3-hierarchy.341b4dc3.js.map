{"version":3,"sources":["webpack:///./node_modules/d3-hierarchy/src/constant.js","webpack:///./node_modules/d3-hierarchy/src/treemap/round.js","webpack:///./node_modules/d3-hierarchy/src/treemap/dice.js","webpack:///./node_modules/d3-hierarchy/src/accessors.js","webpack:///./node_modules/d3-hierarchy/src/pack/index.js","webpack:///./node_modules/d3-hierarchy/src/treemap/squarify.js","webpack:///./node_modules/d3-hierarchy/src/pack/siblings.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/count.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/index.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/each.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/find.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/sum.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/sort.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/path.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/ancestors.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/descendants.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/leaves.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/links.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/iterator.js","webpack:///./node_modules/d3-hierarchy/src/array.js","webpack:///./node_modules/d3-hierarchy/src/treemap/index.js","webpack:///./node_modules/d3-hierarchy/src/cluster.js","webpack:///./node_modules/d3-hierarchy/src/stratify.js","webpack:///./node_modules/d3-hierarchy/src/tree.js","webpack:///./node_modules/d3-hierarchy/src/treemap/binary.js","webpack:///./node_modules/d3-hierarchy/src/treemap/sliceDice.js","webpack:///./node_modules/d3-hierarchy/src/treemap/resquarify.js","webpack:///./node_modules/d3-hierarchy/src/treemap/slice.js","webpack:///./node_modules/d3-hierarchy/src/pack/enclose.js","webpack:///./node_modules/d3-hierarchy/src/partition.js"],"names":["constantZero","x","node","x0","Math","round","y0","x1","y1","nodes","parent","children","i","n","length","k","value","optional","f","required","Error","defaultRadius","d","sqrt","radiusLeaf","radius","r","max","packChildren","padding","e","translateChild","y","dx","dy","pack","root","eachBefore","eachAfter","min","arguments","size","phi","squarifyRatio","ratio","row","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","alpha","beta","rows","i0","i1","push","dice","slice","squarify","custom","place","b","a","c","a2","b2","d2","intersects","dr","score","_","next","ab","Node","circle","this","previous","packEnclose","circles","aa","ca","j","sj","sk","count","sum","hierarchy","data","Map","undefined","mapChildren","objectChildren","child","childs","pop","Array","from","depth","computeHeight","isArray","copyData","height","prototype","constructor","each","index","callback","call","that","find","sort","compare","path","start","ancestor","aNodes","ancestors","bNodes","leastCommonAncestor","end","splice","descendants","leaves","links","source","target","copy","Symbol","iterator","current","reverse","shuffle","array","t","m","random","tile","paddingStack","paddingInner","paddingTop","paddingRight","paddingBottom","paddingLeft","treemap","positionNode","p","paddingOuter","defaultSeparation","meanXReduce","maxYReduce","separation","nodeSize","cluster","previousNode","reduce","meanX","maxY","left","leafLeft","right","leafRight","preroot","ambiguous","defaultId","id","defaultParentId","parentId","stratify","nodeId","nodeKey","nodeByKey","set","has","get","nextLeft","v","nextRight","moveSubtree","wm","wp","shift","change","s","z","nextAncestor","vim","TreeNode","A","Object","create","tree","treeRoot","firstWalk","secondWalk","sizeNode","bottom","tx","kx","ky","siblings","w","executeShifts","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","sums","partition","valueOffset","valueTarget","hi","mid","valueLeft","valueRight","xk","yk","resquarify","_squarify","extendBasis","B","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","enclosesWeak","encloseBasis","r1","x2","y2","r2","x21","y21","r21","l","x3","y3","r3","a3","b3","c2","c3","d1","d3","xa","xb","ya","yb","C"],"mappings":"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","file":"js/npm.d3-hierarchy.341b4dc3.js","sourcesContent":["export function constantZero() {\n  return 0;\n}\n\nexport default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n","export function optional(f) {\n  return f == null ? null : required(f);\n}\n\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n","import {packEnclose} from \"./siblings.js\";\nimport {optional} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nexport default function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n","import treemapDice from \"./dice.js\";\nimport treemapSlice from \"./slice.js\";\n\nexport var phi = (1 + Math.sqrt(5)) / 2;\n\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nexport default (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n","import array from \"../array.js\";\nimport enclose from \"./enclose.js\";\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packEnclose(circles) {\n  if (!(n = (circles = array(circles)).length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nexport default function(circles) {\n  packEnclose(circles);\n  return circles;\n}\n","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","import node_count from \"./count.js\";\nimport node_each from \"./each.js\";\nimport node_eachBefore from \"./eachBefore.js\";\nimport node_eachAfter from \"./eachAfter.js\";\nimport node_find from \"./find.js\";\nimport node_sum from \"./sum.js\";\nimport node_sort from \"./sort.js\";\nimport node_path from \"./path.js\";\nimport node_ancestors from \"./ancestors.js\";\nimport node_descendants from \"./descendants.js\";\nimport node_leaves from \"./leaves.js\";\nimport node_links from \"./links.js\";\nimport node_iterator from \"./iterator.js\";\n\nexport default function hierarchy(data, children) {\n  if (data instanceof Map) {\n    data = [undefined, data];\n    if (children === undefined) children = mapChildren;\n  } else if (children === undefined) {\n    children = objectChildren;\n  }\n\n  var root = new Node(data),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {\n      node.children = childs;\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = childs[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction objectChildren(d) {\n  return d.children;\n}\n\nfunction mapChildren(d) {\n  return Array.isArray(d) ? d[1] : null;\n}\n\nfunction copyData(node) {\n  if (node.data.value !== undefined) node.value = node.data.value;\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  find: node_find,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy,\n  [Symbol.iterator]: node_iterator\n};\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], next = [], children, i, n, index = -1;\n  while (node = nodes.pop()) {\n    next.push(node);\n    if (children = node.children) {\n      for (i = 0, n = children.length; i < n; ++i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  while (node = next.pop()) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], children, i, index = -1;\n  while (node = nodes.pop()) {\n    callback.call(that, node, ++index, this);\n    if (children = node.children) {\n      for (i = children.length - 1; i >= 0; --i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  return this;\n}\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    if (callback.call(that, node, ++index, this)) {\n      return node;\n    }\n  }\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  return Array.from(this);\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","export default function*() {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      yield node;\n      if (children = node.children) {\n        for (i = 0, n = children.length; i < n; ++i) {\n          next.push(children[i]);\n        }\n      }\n    }\n  } while (next.length);\n}\n","export default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n\nexport function shuffle(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n","import roundNode from \"./round.js\";\nimport squarify from \"./squarify.js\";\nimport {required} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\n\nexport default function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n","function defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n","import {required} from \"./accessors.js\";\nimport {Node, computeHeight} from \"./hierarchy/index.js\";\n\nvar preroot = {depth: -1},\n    ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nexport default function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var nodes = Array.from(data),\n        n = nodes.length,\n        d,\n        i,\n        root,\n        parent,\n        node,\n        nodeId,\n        nodeKey,\n        nodeByKey = new Map;\n\n    for (i = 0; i < n; ++i) {\n      d = nodes[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = node.id = nodeId;\n        nodeByKey.set(nodeKey, nodeByKey.has(nodeKey) ? ambiguous : node);\n      }\n      if ((nodeId = parentId(d, i, data)) != null && (nodeId += \"\")) {\n        node.parent = nodeId;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (nodeId = node.parent) {\n        parent = nodeByKey.get(nodeId);\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      } else {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n}\n","import {Node} from \"./hierarchy/index.js\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = value ? (x0 * valueRight + x1 * valueLeft) / value : x1;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = value ? (y0 * valueRight + y1 * valueLeft) / value : y1;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n","import dice from \"./dice.js\";\nimport slice from \"./slice.js\";\n\nexport default function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? slice : dice)(parent, x0, y0, x1, y1);\n}\n","import treemapDice from \"./dice.js\";\nimport treemapSlice from \"./slice.js\";\nimport {phi, squarifyRatio} from \"./squarify.js\";\n\nexport default (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += (y1 - y0) * row.value / value : y1);\n        else treemapSlice(row, x0, y0, value ? x0 += (x1 - x0) * row.value / value : x1, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n","import {shuffle} from \"../array.js\";\n\nexport default function(circles) {\n  var i = 0, n = (circles = shuffle(Array.from(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + Math.max(a.r, b.r, 1) * 1e-9, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n","import roundNode from \"./treemap/round.js\";\nimport treemapDice from \"./treemap/dice.js\";\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n"],"sourceRoot":""}